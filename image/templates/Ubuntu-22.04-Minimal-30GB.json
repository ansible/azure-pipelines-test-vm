{
    "apiVersion": "2022-02-14",
    "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
            "/subscriptions/088c3066-f1e5-4dd4-88ca-9e03cab2a11d/resourcegroups/AzurePipelinesImageBuilder/providers/Microsoft.ManagedIdentity/userAssignedIdentities/AzureImageBuilderIdentity": {}
        }
    },
    "location": "eastus2",
    "properties": {
        "buildTimeoutInMinutes": 120,
        "customize": [
            {
                "inline": [
                    "echo Removing unattended-upgrades ...",
                    "sudo apt-get purge unattended-upgrades -y",
                    "echo Updating apt database ...",
                    "sudo apt-get update -y",
                    "echo Upgrading installed packages ...",
                    "sudo apt-get upgrade -y",
                    "echo Removing unused packages ...",
                    "sudo apt-get autoremove -y",
                    "echo Installing docker.io ...",
                    "sudo apt-get install docker.io -y --no-install-recommends",
                    "echo Removing unwanted files ...",
                    "sudo rm -rf /var/log/unattended-upgrades",
                    "echo Package installation complete"
                ],
                "name": "Install Packages",
                "type": "Shell"
            },
            {
                "inline": [
                    "echo Creating cgroup-v1 service ...",
                    "cat << UNIT_FILE | sudo tee /etc/systemd/system/cgroup-v1.service\n[Unit]\nDescription=Enable cgroup v1\nBefore=basic.target\nAfter=sysinit.target\nDefaultDependencies=no\n\n[Service]\nType=oneshot\nExecStart=mkdir /sys/fs/cgroup/systemd\nExecStart=mount cgroup -t cgroup /sys/fs/cgroup/systemd -o none,name=systemd,xattr\n\n[Install]\nWantedBy=basic.target\nUNIT_FILE",
                    "echo Enabling cgroup-v1 service ...",
                    "sudo systemctl enable cgroup-v1",
                    "echo Service cgroup-v1 installed"
                ],
                "name": "Create cgroup-v1 Service",
                "type": "Shell"
            },
            {
                "inline": [
                    "echo Pulling quay.io/ansible/azure-pipelines-test-container:3.0.0 ...",
                    "sudo docker pull quay.io/ansible/azure-pipelines-test-container:3.0.0",
                    "echo Pulling quay.io/ansible/azure-pipelines-test-container:4.0.1 ...",
                    "sudo docker pull quay.io/ansible/azure-pipelines-test-container:4.0.1",
                    "echo All images have been pulled"
                ],
                "name": "Pull Docker Images",
                "type": "Shell"
            },
            {
                "inline": [
                    "echo Checking free disk space ...",
                    "set -eu\nrequire_kb_free=10000000\nkb_free=$(df --output=avail,target | grep ' /$' | sed 's/^ *//;' | cut -d ' ' -f 1)\necho Free disk space required: ${require_kb_free} KB\necho Free disk space remaining: ${kb_free} KB\nif [ ${kb_free} -lt ${require_kb_free} ]; then\n  echo Insufficient free disk space remaining\n  exit 1\nfi",
                    "echo Free disk space OK"
                ],
                "name": "Check Free Disk Space",
                "type": "Shell"
            },
            {
                "inline": [
                    "echo Customization complete"
                ],
                "name": "Complete",
                "type": "Shell"
            }
        ],
        "distribute": [
            {
                "galleryImageId": "/subscriptions/088c3066-f1e5-4dd4-88ca-9e03cab2a11d/resourceGroups/AzurePipelinesImageBuilder/providers/Microsoft.Compute/galleries/AzurePipelinesGallery/images/Ubuntu-22.04-Minimal-30GB",
                "replicationRegions": [],
                "runOutputName": "Ubuntu-22.04-Minimal-30GB",
                "type": "SharedImage"
            }
        ],
        "source": {
            "offer": "0001-com-ubuntu-server-jammy",
            "publisher": "Canonical",
            "sku": "22_04-lts-gen2",
            "type": "PlatformImage",
            "version": "latest"
        },
        "vmProfile": {
            "osDiskSizeGB": 30,
            "vmSize": "Standard_F2s_v2"
        }
    },
    "type": "Microsoft.VirtualMachineImages/imageTemplates"
}
